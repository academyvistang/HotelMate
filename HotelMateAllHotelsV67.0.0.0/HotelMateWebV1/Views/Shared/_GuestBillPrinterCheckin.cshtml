@using System.Globalization
@using HotelMateWebV1.Helpers
@model HotelMateWebV1.Models.GuestRoomAccountViewModel


<br />

<img src="@Model.ImageUrl" width="400" alt="" />

@if (Model.Guest.BusinessAccount != null && !string.IsNullOrEmpty(Model.Guest.BusinessAccount.CompanyName))
{
    <div style="width:350px;">@Html.Label("Company Name") : @Html.Display(Model.Guest.BusinessAccount.CompanyName) </div>
}

<div style="width:350px;">@Html.LabelFor(model => model.GuestRoomNumber) : @Html.DisplayFor(model => model.GuestRoomNumber) </div>
<div style="width:350px;">@Html.LabelFor(model => model.GuestName)       : @Html.DisplayFor(model => model.GuestName)</div>
<div style="width:350px;">@Html.LabelFor(model => model.ArrivalDate)     : @Html.DisplayFor(model => model.ArrivalDate)</div>
<div style="width:350px;">@Html.LabelFor(model => model.DepartureDate)   : @Html.DisplayFor(model => model.DepartureDate)</div>
<div style="width:350px;">@Html.LabelFor(model => model.NoOfNight)       : @Html.DisplayFor(model => model.NoOfNight)</div>
<div style="width:350px;">@Html.LabelFor(model => model.NoOfPersons)     : @Html.DisplayFor(model => model.NoOfPersons)</div>
<div style="width:350px;">@Html.LabelFor(model => model.Currency)        : @Html.DisplayFor(model => model.Currency)</div>
<div style="width:350px;">@Html.LabelFor(model => model.Discounts)      : @Html.DisplayFor(model => model.Discounts)</div>
<div style="width:350px;">@Html.LabelFor(model => model.RoomRate)        : @Html.DisplayFor(model => model.RoomRate)</div>
<div style="width:350px;">@Html.LabelFor(model => model.BillNo)          : @Html.DisplayFor(model => model.BillNo)</div>
<br />
<br />

<h3>Payments & Expenses</h3>
<br />
<table cellpadding="3" cellspacing="3">
    <tr border="1" bgcolor="#803F98" color="#DDDDDD">
        <th width="15%">Room No.</th>
        <th width="20%">Payment Type</th>
        <th width="10%">Status</th>
        <th width="15%">Ref</th>
        <th width="20%">Date</th>
        <th width="17%">Amount</th>
    </tr>
    @{
        var OddColor = "#FFFFFF";
        var evenColor = "#EAF3FF";
        var Odd = OddColor;
    }
    @foreach (var rm in Model.Guest.GuestRooms.Where(x => x.GuestRoomAccounts.Sum(y => y.Amount) >= 0))
    {
        foreach (var ac in rm.GuestRoomAccounts.OrderByDescending(x => x.TransactionDate))
        {
            <tr border="1" bgcolor="@Odd">
                <td class="tth2">@rm.Room.RoomNumber</td>
                <td class="tth2">@ac.RoomPaymentType.Name </td>
                <td class="tth2"><span style="padding-left:16px;"><img src="@ac.GetSymbolPath(Request.Url.Scheme, Request.Url.Authority, Url.Content("~"))" /></span></td>
                <td class="tth2">@ac.TransactionId</td>
                <td class="tth2">@ac.TransactionDate.ToShortDateString()</td>
                <td class="tth2">@ac.Amount</td>
            </tr>
            if (Odd == OddColor)
            {
                Odd = evenColor;
            }
            else
            {
                Odd = OddColor;
            }
        }
        if (rm.GuestRoomAccounts.Any())
        {
            <tr border="1" bgcolor="#FFFFFF"><td></td><td></td><td></td><td></td><td>@rm.Room.RoomNumber Total</td><td>@rm.GuestRoomAccounts.Summation().ToString(CultureInfo.InvariantCulture)</td></tr>
        }
    }

    <tr border="1" bgcolor="#FFFFFF"><td colspan="8"></td></tr>
    <tr border="1" bgcolor="#EAF3FF"><td></td><td></td><td></td><td></td><td>Total</td><td>@Model.Guest.TotalAccounts().ToString(CultureInfo.InvariantCulture)</td></tr>


</table>

<br />
<br />

@Html.LabelFor(model => model.GuestSign)
<br />
<br />
@Html.LabelFor(model => model.ReceptionSign)

<br />
<br />

<br />
<br />

@if(Model.TermsAndConditions.Any())
{
   <h3>TERMS & CONDITIONS</h3>
   <br />
    <table>
        <tbody>
            @foreach(var str in Model.TermsAndConditions)
            {
            <tr>
                <td>@str</td>
            </tr>
            }

        </tbody>
    </table>
   
}

@if (Model.Acknowledge.Any())
{
    <br />
    <br />
    <h3>ACKNOWLEDGEMENT</h3>
    <br />

   <table>
        <tbody>
            @foreach (var strAck in Model.Acknowledge)
            {
            <tr>
                <td>@strAck</td>
            </tr>
            }

        </tbody>
    </table>

}








