
@model HotelMateWebV1.Models.PurchaseOrderModel

@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<script src="~/Scripts/jquery-1.10.2.min.js"></script>


<div class="page-head">
    <h2>Items</h2>
    <ol class="breadcrumb">
        <li><a href="#">Home</a></li>
        <li><a href="#">Stock Order</a></li>
        <li class="active">Accept Goods Into Store</li>
    </ol>
</div>
<div class="cl-mcont">
    <div class="row">
        <div class="col-sm-6 col-md-6">
            <div class="block-flat">
                <div class="header">
                    <h3>Accept Goods Into Store</h3>
                    @if (Model.Saved.HasValue && Model.Saved.Value)
                    {
                        <div class="alert alert-success alert-white rounded">
                            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                            <div class="icon"><i class="fa fa-check"></i></div>
                            <strong>Success!</strong> Changes has been saved successfully!
                        </div>
                        <span>@Html.ActionLink("Create Stock Order", "CreatePO")</span>
                    }
                </div>
                <div class="content">

                    @using (Html.BeginForm("CREATEPORECIEVED", "Item", FormMethod.Post, new { @class = "form-horizontal" }))
                    {

                        @Html.HiddenFor(model => model.Id) 

                        @Html.ValidationSummary(true)


                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, new { @class = "col-sm-3 control-label" })
                            <div class="col-sm-7">
                                @Html.EditorFor(model => model.Description, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Description)
                            </div>
                        </div>

                    

                        <div class="form-group">
                            @Html.LabelFor(model => model.Value, new { @class = "col-sm-3 control-label" })
                            <div class="col-sm-7">
                                @Html.EditorFor(model => model.Value, new { @class = "form-control", @disabled = "disabled", @readonly = "readonly" })
                            </div>
                        </div>


                        <div class="form-group">
                            <div class="col-sm-offset-2 col-sm-10">
                                @{string stringValue = (Model.Id == 0) ? "Accept Order" : "Accept Order";}
                                <button type="submit" name="submitButton" value="ACCEPT" class="btn btn-primary">@stringValue</button>
                                <button type="submit" name="submitButton" value="REJECT" class="btn btn-danger">Reject Acceptance</button>

                            </div>
                        </div>



                        if (Model.Id > 0)
                        {
                            @Html.Partial("_PurchaseOrderItems")
                        }

                    }





                </div>
            </div>
        </div>
    </div>

</div>
