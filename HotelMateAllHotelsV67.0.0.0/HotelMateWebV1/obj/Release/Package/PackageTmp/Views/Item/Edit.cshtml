@model HotelMateWebV1.Models.ItemModel

@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}



<div class="page-head">
    <h2>Items</h2>
    <ol class="breadcrumb">
        <li><a href="#">Home</a></li>
        <li><a href="#">Item</a></li>
        <li class="active">Edit</li>
    </ol>
</div>
<div class="cl-mcont">
    <div class="row">
        <div class="col-sm-6 col-md-6">
            <div class="block-flat">
                <div class="header">
                    <h3>Item Create</h3>
                    @if (Model.Saved.HasValue && Model.Saved.Value)
                    {
                        <div class="alert alert-success alert-white rounded">
                            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                            <div class="icon"><i class="fa fa-check"></i></div>
                            <strong>Success!</strong> Changes has been saved successfully!
                        </div>
                        <span>@Html.ActionLink("Create New", "Create")</span>
                    }
                </div>
                <div class="content">

                    @using (Html.BeginForm("Edit", "Item", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal" }))
                    {
                        
                        
                            @Html.HiddenFor(model => model.Id)
                            @Html.HiddenFor(model => model.Quantity)
                            @Html.HiddenFor(model => model.Description)
                        
                            @Html.ValidationSummary(true)
                        
                        
                        <div class="form-group">
                            @Html.LabelFor(model => model.StockItemName, new { @class = "col-sm-3 control-label" })
                            <div class="col-sm-7">
                                @Html.EditorFor(model => model.StockItemName, new { @class = "form-control", @id = "StockItemName", @placeholder = "StockItemName" })
                                @*<span style="padding-left:10px;"><a href="#" id="GetImages">Get Images</a></span>*@
                                @Html.ValidationMessageFor(model => model.StockItemName)
                            </div>
                        </div>

                   

                        <div class="form-group">
                            @Html.LabelFor(model => model.UnitPrice, new { @class = "col-sm-3 control-label" })
                            <div class="col-sm-7">
                                @Html.EditorFor(model => model.UnitPrice, new { @class = "form-control", @id = "UnitPrice", @placeholder = "UnitPrice" })
                                @Html.ValidationMessageFor(model => model.UnitPrice)
                            </div>
                        </div>
                        
                         <div class="form-group">
            @Html.LabelFor(model => model.CookedFood, new { @class = "col-sm-3 control-label" })
            <div class="col-sm-7">
                @Html.EditorFor(model => model.CookedFood, new { @class = "form-control"})               
            </div>
        </div>

                      
                         <div class="form-group">
            @Html.LabelFor(model => model.KitchenOnly, new { @class = "col-sm-3 control-label" })
            <div class="col-sm-7">
                @Html.EditorFor(model => model.KitchenOnly, new { @class = "form-control" })               
            </div>
        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CategoryId, new { @class = "col-sm-3 control-label" })
                            <div class="col-sm-7">
                                @Html.DropDownListFor(model => model.CategoryId, Model.selectList)
                                @Html.ValidationMessageFor(model => model.CategoryId)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.OrigPrice, new { @class = "col-sm-3 control-label" })
                            <div class="col-sm-7">
                                @Html.EditorFor(model => model.OrigPrice, new { @class = "form-control", @id = "OrigPrice", @placeholder = "OrigPrice" })
                                @Html.ValidationMessageFor(model => model.OrigPrice)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.NotNumber, new { @class = "col-sm-3 control-label" })
                            <div class="col-sm-7">
                                @Html.EditorFor(model => model.NotNumber, new { @class = "form-control", @id = "NotNumber", @placeholder = "NotNumber" })
                                @Html.ValidationMessageFor(model => model.NotNumber)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Barcode, new { @class = "col-sm-3 control-label" })
                            <div class="col-sm-7">
                                @Html.EditorFor(model => model.Barcode, new { @class = "form-control", @id = "Barcode", @placeholder = "Barcode" })
                                @Html.ValidationMessageFor(model => model.Barcode)
                            </div>
                        </div>
                        
                        <div class="form-group">
            @Html.LabelFor(model => model.Picture, new { @class = "col-sm-3 control-label" })
            <div class="col-sm-7">
               <input type="file" name="file" />
            </div>
        </div>


                        <div class="form-group">
                            <div class="col-sm-offset-2 col-sm-10">
                                @{string stringValue = (Model.Id == 0) ? "Create" : "Update";}
                                <button type="submit" class="btn btn-primary">@stringValue</button>
                            </div>
                        </div>

                        @if (Model.Id > 0)
                        {
                            <div class="form-group">
                                <div class="col-md-offset-2 col-sm-7">
                                    <img src="~/Products/@Model.PicturePath" height="120" width="150" />
                                </div>
                            </div>
                        }


                        <div id="ImageResultsSet"></div>
                    }


                </div>
            </div>
        </div>
    </div>

</div>


